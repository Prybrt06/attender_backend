generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  mail      String
  username  String     @unique
  password  String
  createdAt DateTime   @default(now())
  schedules Schedule[]
  subjects  Subject[]
  updates   Update[]
}

model Subject {
  id              String   @id @default(uuid())
  name            String   @db.VarChar(255)
  subjectCode     String   @db.VarChar(255)
  createdAt       DateTime @default(now())
  belongsToId     String
  totalClasses    Int      @default(0)
  attendedClasses Int      @default(0)
  belongsTo       User     @relation(fields: [belongsToId], references: [id], onDelete: Cascade)
  updates         Update[]

  @@unique([id, belongsToId])
}

model Update {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  isAttended      Boolean
  subjectId       String
  belongsToUserId String
  belongsToUser   User     @relation(fields: [belongsToUserId], references: [id], onDelete: Cascade)
  subject         Subject  @relation(fields: [subjectId], references: [id], onDelete: Cascade)
}

model Schedule {
  id          String @id @default(uuid())
  subjectName String
  subjectCode String

  day       Day
  startTime Int
  endTime   Int

  belongsToUserId String
  belongsToUser   User   @relation(fields: [belongsToUserId], references: [id], onDelete: Cascade)
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
